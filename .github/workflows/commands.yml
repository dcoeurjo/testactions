name: Commands

on:
  issue_comment:
      types: [created]

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:

    permissions:
      contents: read # to fetch code (actions/checkout)
      pull-requests: write # to create comment

    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: get_round
        with:
         result-encoding: string
         script: |
             const bodycmt = context.payload.comment.body
             if(bodycmt.includes("/echo:"))
               return 'echo'
             return 'stop'

      - name: Emoji-comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.reactions.createForIssueComment({
              comment_id: ${{ github.event.comment.id }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'rocket'})

      - name: Echo action
        uses: actions/github-script@v6
        if: steps.get_round.outputs.result == 'echo'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const bodycmt = context.payload.comment.body
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: bodycmt
            })

      - uses: actions/checkout@v3
        name: "checkout branch"
        if: steps.get_round.outputs.result != 'stop'
        with:
           repository: ${{ github.repository }}
           ref: refs/pull/${{ steps.get_pr_number.outputs.result }}/merge
#           token: ${{ secrets.PUSH_TO_DGTAL_GITHUB_IO_TOKEN }}
           fetch-depth: 2

      - name: install dependencies
        if: steps.get_round.outputs.result != 'stop'
        run: |
          set -x
          sudo apt-get update && sudo apt-get install -y graphviz ssh doxygen
          git config --global user.email "dgtal@dgtal.org"
          git config --global user.name "DGtal"
      - name: configure all
        if: steps.get_round.outputs.result != 'stop'
        run: |
          set -ex
          mkdir -p build_doc
          
